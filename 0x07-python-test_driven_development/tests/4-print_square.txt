The ``4-print_square`` module
======================

Using ``print_square``
-------------------

This is an example text file in reStructuredText format.  First import
``print_square`` from the ``4-print_square`` module:
>>> print_square = __import__('4-print_square').print_square

Basecases
---------
>>> print_square(5)
#####
#####
#####
#####
#####
>>> print_square(0)
>>> print_square(1)
#
>>> print_square(int(float(5.3)))
#####
#####
#####
#####
#####

Argument Errors
----------------
>>> print_square(-5)
Traceback (most recent call last):
	  ...
ValueError: size must be >= 0
>>> print_square("A")
Traceback (most recent call last):
	  ...
TypeError: size must be an integer
>>> print_square([1, 2, 3])
Traceback (most recent call last):
	  ...
TypeError: size must be an integer
>>> print_square({1, 2, 3})
Traceback (most recent call last):
	  ...
TypeError: size must be an integer
>>> print_square((1, 2))
Traceback (most recent call last):
	  ...
TypeError: size must be an integer
>>> print_square({1:"yo"})
Traceback (most recent call last):
	  ...
TypeError: size must be an integer
>>> print_square(3.14)
Traceback (most recent call last):
	  ...
TypeError: size must be an integer
>>> print_square(True)
Traceback (most recent call last):
	  ...
TypeError: size must be an integer
>>> print_square(False)
Traceback (most recent call last):
	  ...
TypeError: size must be an integer
>>> print_square()
Traceback (most recent call last):
	  ...
TypeError: print_square() missing 1 required positional argument: 'size'
>>> print_square(5, 2)
Traceback (most recent call last):
	  ...
TypeError: print_square() takes 1 positional argument but 2 were given
>>> print_square(-5.2)
Traceback (most recent call last):
	  ...
TypeError: size must be an integer